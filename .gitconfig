[user]
   name = Justin Kronz
   email = jkronz@gmail.com
[color]
   ui = auto
[color "branch"]
   current = green
   local = white
   remote = yellow
[core]
   autocrlf = input
   excludesfile = /Users/justin/.gitignore
   attributesfile = /Users/justin/.gitattributes_global
[help]
   autocorrect = 1
[push]
   default = simple
[alias]
   pushf = push --force-with-lease
   rei = rebase --interactive origin/master
   logr = log --find-renames
   prune-all = !git remote | xargs -n 1 git remote prune
   remove-branch = "!sh -c 'git branch -D $1 && git push origin :$1' -"
   pl = pull --ff-only
   cob = checkout -b
   c  = commit
   co = checkout
   cp = cherry-pick
   df = diff
   dh = diff HEAD
   dc = diff --staged
   retag = "!sh -c 'git tag -f $1 && git push origin $1' -"
   standup = log --graph --pretty=format:'%Cred%h%Creset -%Cgreen %an -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative --since="yesterday"
   context = blame
   lf = log --pretty=fuller
   lg = log
   lod = log --oneline --decorate -100
   lpo = log --pretty=oneline --abbrev-commit --graph --decorate -100
   st = status
   pub = "!f() { git push -u ${1:-origin} `git symbolic-ref HEAD`; }; f"
   cleanup = "!git branch --merged | grep  -v '\\*\\|master' | xargs -n 1 git branch -d && git remote prune origin"
   fixup = commit --amend --no-edit
   wallop = "!git add . && git commit --amend --no-edit && git push --force-with-lease"
   sync = "!sh -c 'git fetch && git merge origin/master --ff-only'"
   otherbranches = "!sh -c 'git branch | grep -v jk/ | grep -v master'"
   cont = rebase --continue
[filter "lfs"]
   clean = git-lfs clean %f
   smudge = git-lfs smudge %f
   required = true
[url "git@github.com:"]
   insteadOf = https://github.com/
